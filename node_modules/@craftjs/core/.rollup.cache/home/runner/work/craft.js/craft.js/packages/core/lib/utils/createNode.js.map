{"version":3,"file":"createNode.js","sourceRoot":"","sources":["../../src/utils/createNode.ts"],"names":[],"mappings":"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","sourcesContent":["import { getRandomId as getRandomNodeId } from '@craftjs/utils';\nimport React from 'react';\n\nimport { Node, FreshNode, UserComponentConfig } from '../interfaces';\nimport {\n  defaultElementProps,\n  Element,\n  Canvas,\n  elementPropToNodeData,\n  deprecateCanvasComponent,\n} from '../nodes';\nimport { NodeProvider } from '../nodes/NodeContext';\n\nconst getNodeTypeName = (type: string | { name: string }) =>\n  typeof type == 'string' ? type : type.name;\n\nexport function createNode(\n  newNode: FreshNode,\n  normalize?: (node: Node) => void\n) {\n  let actualType = newNode.data.type as any;\n  let id = newNode.id || getRandomNodeId();\n\n  const node: Node = {\n    id,\n    _hydrationTimestamp: Date.now(),\n    data: {\n      type: actualType,\n      name: getNodeTypeName(actualType),\n      displayName: getNodeTypeName(actualType),\n      props: {},\n      custom: {},\n      parent: null,\n      isCanvas: false,\n      hidden: false,\n      nodes: [],\n      linkedNodes: {},\n      ...newNode.data,\n    },\n    related: {},\n    events: {\n      selected: false,\n      dragged: false,\n      hovered: false,\n    },\n    rules: {\n      canDrag: () => true,\n      canDrop: () => true,\n      canMoveIn: () => true,\n      canMoveOut: () => true,\n    },\n    dom: null,\n  };\n\n  // @ts-ignore\n  if (node.data.type === Element || node.data.type === Canvas) {\n    const mergedProps = {\n      ...defaultElementProps,\n      ...node.data.props,\n    };\n\n    node.data.props = Object.keys(node.data.props).reduce((props, key) => {\n      if (Object.keys(defaultElementProps).includes(key)) {\n        // If a <Element /> specific props is found (ie: \"is\", \"canvas\")\n        // Replace the node.data with the value specified in the prop\n        node.data[elementPropToNodeData[key] || key] = mergedProps[key];\n      } else {\n        // Otherwise include the props in the node as usual\n        props[key] = node.data.props[key];\n      }\n\n      return props;\n    }, {});\n\n    actualType = node.data.type;\n    node.data.name = getNodeTypeName(actualType);\n    node.data.displayName = getNodeTypeName(actualType);\n\n    const usingDeprecatedCanvas = node.data.type === Canvas;\n    if (usingDeprecatedCanvas) {\n      node.data.isCanvas = true;\n      deprecateCanvasComponent();\n    }\n  }\n\n  if (normalize) {\n    normalize(node);\n  }\n\n  // TODO: use UserComponentConfig type\n  const userComponentConfig = actualType.craft as UserComponentConfig<any>;\n\n  if (userComponentConfig) {\n    node.data.displayName =\n      userComponentConfig.displayName ||\n      userComponentConfig.name ||\n      node.data.displayName;\n\n    node.data.props = {\n      ...(userComponentConfig.props || userComponentConfig.defaultProps || {}),\n      ...node.data.props,\n    };\n\n    node.data.custom = {\n      ...(userComponentConfig.custom || {}),\n      ...node.data.custom,\n    };\n\n    if (\n      userComponentConfig.isCanvas !== undefined &&\n      userComponentConfig.isCanvas !== null\n    ) {\n      node.data.isCanvas = userComponentConfig.isCanvas;\n    }\n\n    if (userComponentConfig.rules) {\n      Object.keys(userComponentConfig.rules).forEach((key) => {\n        if (['canDrag', 'canDrop', 'canMoveIn', 'canMoveOut'].includes(key)) {\n          node.rules[key] = userComponentConfig.rules[key];\n        }\n      });\n    }\n\n    if (userComponentConfig.related) {\n      const relatedNodeContext = {\n        id: node.id,\n        related: true,\n      };\n\n      Object.keys(userComponentConfig.related).forEach((comp) => {\n        node.related[comp] = (props) =>\n          React.createElement(\n            NodeProvider,\n            relatedNodeContext,\n            React.createElement(userComponentConfig.related[comp], props)\n          );\n      });\n    }\n  }\n\n  return node;\n}\n"]}