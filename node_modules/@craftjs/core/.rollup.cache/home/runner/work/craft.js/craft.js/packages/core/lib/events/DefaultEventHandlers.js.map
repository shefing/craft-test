{"version":3,"file":"DefaultEventHandlers.js","sourceRoot":"","sources":["../../src/events/DefaultEventHandlers.ts"],"names":[],"mappings":"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","sourcesContent":["import { isChromium, isLinux } from '@craftjs/utils';\nimport isFunction from 'lodash/isFunction';\nimport React from 'react';\n\nimport { CoreEventHandlers, CreateHandlerOptions } from './CoreEventHandlers';\nimport { Positioner } from './Positioner';\nimport { createShadow } from './createShadow';\n\nimport { Indicator, NodeId, DragTarget, NodeTree } from '../interfaces';\n\nexport type DefaultEventHandlersOptions = {\n  isMultiSelectEnabled: (e: MouseEvent) => boolean;\n};\n\n/**\n * Specifies Editor-wide event handlers and connectors\n */\nexport class DefaultEventHandlers<O = {}> extends CoreEventHandlers<\n  DefaultEventHandlersOptions & O\n> {\n  /**\n   * Note: Multiple drag shadows (ie: via multiselect in v0.2 and higher) do not look good on Linux Chromium due to way it renders drag shadows in general,\n   * so will have to fallback to the single shadow approach above for the time being\n   * see: https://bugs.chromium.org/p/chromium/issues/detail?id=550999\n   */\n  static forceSingleDragShadow = isChromium() && isLinux();\n\n  draggedElementShadow: HTMLElement;\n  dragTarget: DragTarget;\n  positioner: Positioner | null = null;\n  currentSelectedElementIds = [];\n\n  onDisable() {\n    this.options.store.actions.clearEvents();\n  }\n\n  handlers() {\n    const store = this.options.store;\n\n    return {\n      connect: (el: HTMLElement, id: NodeId) => {\n        store.actions.setDOM(id, el);\n\n        return this.reflect((connectors) => {\n          connectors.select(el, id);\n          connectors.hover(el, id);\n          connectors.drop(el, id);\n        });\n      },\n      select: (el: HTMLElement, id: NodeId) => {\n        const unbindOnMouseDown = this.addCraftEventListener(\n          el,\n          'mousedown',\n          (e) => {\n            e.craft.stopPropagation();\n\n            let newSelectedElementIds = [];\n\n            if (id) {\n              const { query } = store;\n              const selectedElementIds = query.getEvent('selected').all();\n              const isMultiSelect = this.options.isMultiSelectEnabled(e);\n\n              /**\n               * Retain the previously select elements if the multi-select condition is enabled\n               * or if the currentNode is already selected\n               *\n               * so users can just click to drag the selected elements around without holding the multi-select key\n               */\n\n              if (isMultiSelect || selectedElementIds.includes(id)) {\n                newSelectedElementIds = selectedElementIds.filter(\n                  (selectedId) => {\n                    const descendants = query\n                      .node(selectedId)\n                      .descendants(true);\n                    const ancestors = query.node(selectedId).ancestors(true);\n\n                    // Deselect ancestors/descendants\n                    if (descendants.includes(id) || ancestors.includes(id)) {\n                      return false;\n                    }\n\n                    return true;\n                  }\n                );\n              }\n\n              if (!newSelectedElementIds.includes(id)) {\n                newSelectedElementIds.push(id);\n              }\n            }\n\n            store.actions.setNodeEvent('selected', newSelectedElementIds);\n          }\n        );\n\n        const unbindOnClick = this.addCraftEventListener(el, 'click', (e) => {\n          e.craft.stopPropagation();\n\n          const { query } = store;\n          const selectedElementIds = query.getEvent('selected').all();\n\n          const isMultiSelect = this.options.isMultiSelectEnabled(e);\n          const isNodeAlreadySelected = this.currentSelectedElementIds.includes(\n            id\n          );\n\n          let newSelectedElementIds = [...selectedElementIds];\n\n          if (isMultiSelect && isNodeAlreadySelected) {\n            newSelectedElementIds.splice(newSelectedElementIds.indexOf(id), 1);\n            store.actions.setNodeEvent('selected', newSelectedElementIds);\n          } else if (!isMultiSelect && selectedElementIds.length > 1) {\n            newSelectedElementIds = [id];\n            store.actions.setNodeEvent('selected', newSelectedElementIds);\n          }\n\n          this.currentSelectedElementIds = newSelectedElementIds;\n        });\n\n        return () => {\n          unbindOnMouseDown();\n          unbindOnClick();\n        };\n      },\n      hover: (el: HTMLElement, id: NodeId) => {\n        const unbindMouseover = this.addCraftEventListener(\n          el,\n          'mouseover',\n          (e) => {\n            e.craft.stopPropagation();\n            store.actions.setNodeEvent('hovered', id);\n          }\n        );\n\n        const unbindMouseleave = this.addCraftEventListener(\n          el,\n          'mouseleave',\n          (e) => {\n            e.craft.stopPropagation();\n            store.actions.setNodeEvent('hovered', null);\n          }\n        );\n\n        return () => {\n          unbindMouseover();\n          unbindMouseleave();\n        };\n      },\n      drop: (el: HTMLElement, targetId: NodeId) => {\n        const unbindDragOver = this.addCraftEventListener(\n          el,\n          'dragover',\n          (e) => {\n            e.craft.stopPropagation();\n            e.preventDefault();\n\n            if (!this.positioner) {\n              return;\n            }\n\n            const indicator = this.positioner.computeIndicator(\n              targetId,\n              e.clientX,\n              e.clientY\n            );\n\n            if (!indicator) {\n              return;\n            }\n\n            store.actions.setIndicator(indicator);\n          }\n        );\n\n        const unbindDragEnter = this.addCraftEventListener(\n          el,\n          'dragenter',\n          (e) => {\n            e.craft.stopPropagation();\n            e.preventDefault();\n          }\n        );\n\n        return () => {\n          unbindDragEnter();\n          unbindDragOver();\n        };\n      },\n      drag: (el: HTMLElement, id: NodeId) => {\n        if (!store.query.node(id).isDraggable()) {\n          return () => {};\n        }\n\n        el.setAttribute('draggable', 'true');\n\n        const unbindDragStart = this.addCraftEventListener(\n          el,\n          'dragstart',\n          (e) => {\n            e.craft.stopPropagation();\n\n            const { query, actions } = store;\n\n            let selectedElementIds = query.getEvent('selected').all();\n\n            const isMultiSelect = this.options.isMultiSelectEnabled(e);\n            const isNodeAlreadySelected = this.currentSelectedElementIds.includes(\n              id\n            );\n\n            if (!isNodeAlreadySelected) {\n              if (isMultiSelect) {\n                selectedElementIds = [...selectedElementIds, id];\n              } else {\n                selectedElementIds = [id];\n              }\n              store.actions.setNodeEvent('selected', selectedElementIds);\n            }\n\n            actions.setNodeEvent('dragged', selectedElementIds);\n\n            const selectedDOMs = selectedElementIds.map(\n              (id) => query.node(id).get().dom\n            );\n\n            this.draggedElementShadow = createShadow(\n              e,\n              selectedDOMs,\n              DefaultEventHandlers.forceSingleDragShadow\n            );\n\n            this.dragTarget = {\n              type: 'existing',\n              nodes: selectedElementIds,\n            };\n\n            this.positioner = new Positioner(\n              this.options.store,\n              this.dragTarget\n            );\n          }\n        );\n\n        const unbindDragEnd = this.addCraftEventListener(el, 'dragend', (e) => {\n          e.craft.stopPropagation();\n\n          this.dropElement((dragTarget, indicator) => {\n            if (dragTarget.type === 'new') {\n              return;\n            }\n\n            const index =\n              indicator.placement.index +\n              (indicator.placement.where === 'after' ? 1 : 0);\n\n            store.actions.move(\n              dragTarget.nodes,\n              indicator.placement.parent.id,\n              index\n            );\n          });\n        });\n\n        return () => {\n          el.setAttribute('draggable', 'false');\n          unbindDragStart();\n          unbindDragEnd();\n        };\n      },\n      create: (\n        el: HTMLElement,\n        userElement: React.ReactElement | (() => NodeTree | React.ReactElement),\n        options?: Partial<CreateHandlerOptions>\n      ) => {\n        el.setAttribute('draggable', 'true');\n\n        const unbindDragStart = this.addCraftEventListener(\n          el,\n          'dragstart',\n          (e) => {\n            e.craft.stopPropagation();\n            let tree;\n            if (typeof userElement === 'function') {\n              const result = userElement();\n              if (React.isValidElement(result)) {\n                tree = store.query.parseReactElement(result).toNodeTree();\n              } else {\n                tree = result;\n              }\n            } else {\n              tree = store.query.parseReactElement(userElement).toNodeTree();\n            }\n\n            const dom = e.currentTarget as HTMLElement;\n            this.draggedElementShadow = createShadow(\n              e,\n              [dom],\n              DefaultEventHandlers.forceSingleDragShadow\n            );\n            this.dragTarget = {\n              type: 'new',\n              tree,\n            };\n\n            this.positioner = new Positioner(\n              this.options.store,\n              this.dragTarget\n            );\n          }\n        );\n\n        const unbindDragEnd = this.addCraftEventListener(el, 'dragend', (e) => {\n          e.craft.stopPropagation();\n          this.dropElement((dragTarget, indicator) => {\n            if (dragTarget.type === 'existing') {\n              return;\n            }\n\n            const index =\n              indicator.placement.index +\n              (indicator.placement.where === 'after' ? 1 : 0);\n            store.actions.addNodeTree(\n              dragTarget.tree,\n              indicator.placement.parent.id,\n              index\n            );\n\n            if (options && isFunction(options.onCreate)) {\n              options.onCreate(dragTarget.tree);\n            }\n          });\n        });\n\n        return () => {\n          el.removeAttribute('draggable');\n          unbindDragStart();\n          unbindDragEnd();\n        };\n      },\n    };\n  }\n\n  private dropElement(\n    onDropNode: (dragTarget: DragTarget, placement: Indicator) => void\n  ) {\n    const store = this.options.store;\n\n    if (!this.positioner) {\n      return;\n    }\n\n    const draggedElementShadow = this.draggedElementShadow;\n\n    const indicator = this.positioner.getIndicator();\n\n    if (this.dragTarget && indicator && !indicator.error) {\n      onDropNode(this.dragTarget, indicator);\n    }\n\n    if (draggedElementShadow) {\n      draggedElementShadow.parentNode.removeChild(draggedElementShadow);\n      this.draggedElementShadow = null;\n    }\n\n    this.dragTarget = null;\n\n    store.actions.setIndicator(null);\n    store.actions.setNodeEvent('dragged', null);\n    this.positioner.cleanup();\n\n    this.positioner = null;\n  }\n}\n"]}