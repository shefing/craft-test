{"version":3,"file":"Events.js","sourceRoot":"","sources":["../../src/events/Events.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,EAAE,EAAE,UAAU,EAAE,OAAO,EAAE,MAAM,OAAO,CAAC;AAEnD,OAAO,EAAE,mBAAmB,EAAE,MAAM,gBAAgB,CAAC;AACrD,OAAO,EAAE,qBAAqB,EAAE,MAAM,yBAAyB,CAAC;AAEhE,OAAO,EAAE,aAAa,EAAE,MAAM,yBAAyB,CAAC;AAMxD,MAAM,CAAC,MAAM,MAAM,GAA0B,CAAC,EAAE,QAAQ,EAAE,EAAE,EAAE;IAC5D,MAAM,KAAK,GAAG,UAAU,CAAC,aAAa,CAAC,CAAC;IAExC,MAAM,OAAO,GAAG,OAAO,CAAC,GAAG,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,UAAU,EAAE,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE;QACtE,KAAK;KACN,CAAC,CAAC;IAEH,IAAI,CAAC,OAAO,EAAE;QACZ,OAAO,IAAI,CAAC;KACb;IAED,OAAO,CACL,oBAAC,mBAAmB,CAAC,QAAQ,IAAC,KAAK,EAAE,OAAO;QAC1C,oBAAC,qBAAqB,OAAG;QACxB,QAAQ,CACoB,CAChC,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import React, { useContext, useMemo } from 'react';\n\nimport { EventHandlerContext } from './EventContext';\nimport { RenderEditorIndicator } from './RenderEditorIndicator';\n\nimport { EditorContext } from '../editor/EditorContext';\n\ntype EventsProps = {\n  children?: React.ReactNode;\n};\n\nexport const Events: React.FC<EventsProps> = ({ children }) => {\n  const store = useContext(EditorContext);\n\n  const handler = useMemo(() => store.query.getOptions().handlers(store), [\n    store,\n  ]);\n\n  if (!handler) {\n    return null;\n  }\n\n  return (\n    <EventHandlerContext.Provider value={handler}>\n      <RenderEditorIndicator />\n      {children}\n    </EventHandlerContext.Provider>\n  );\n};\n"]}