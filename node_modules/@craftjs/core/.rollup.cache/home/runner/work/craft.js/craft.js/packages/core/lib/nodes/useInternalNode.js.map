{"version":3,"file":"useInternalNode.js","sourceRoot":"","sources":["../../src/nodes/useInternalNode.ts"],"names":[],"mappings":"AAAA,OAAO,EACL,kBAAkB,EAClB,wCAAwC,GACzC,MAAM,gBAAgB,CAAC;AACxB,OAAO,EAAE,OAAO,EAAE,UAAU,EAAE,MAAM,OAAO,CAAC;AAC5C,OAAO,SAAS,MAAM,gBAAgB,CAAC;AAEvC,OAAO,EAAE,WAAW,EAAE,MAAM,eAAe,CAAC;AAE5C,OAAO,EAAE,iBAAiB,EAAE,MAAM,6BAA6B,CAAC;AAGhE,MAAM,UAAU,eAAe,CAAW,OAA2B;IACnE,MAAM,OAAO,GAAG,UAAU,CAAC,WAAW,CAAC,CAAC;IACxC,SAAS,CAAC,OAAO,EAAE,wCAAwC,CAAC,CAAC;IAE7D,MAAM,EAAE,EAAE,EAAE,OAAO,EAAE,GAAG,OAAO,CAAC;IAEhC,MAAM,EACJ,OAAO,EAAE,aAAa,EACtB,KAAK,EACL,UAAU,EAAE,gBAAgB,EAC5B,GAAG,SAAS,EACb,GAAG,iBAAiB,CACnB,CAAC,KAAK,EAAE,EAAE,CAAC,EAAE,IAAI,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,OAAO,IAAI,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CACxE,CAAC;IAEF,MAAM,UAAU,GAAG,OAAO,CACxB,GAAG,EAAE,CACH,kBAAkB,CAAC;QACjB,OAAO,EAAE,CAAC,GAAgB,EAAE,EAAE,CAAC,gBAAgB,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC;QAChE,IAAI,EAAE,CAAC,GAAgB,EAAE,EAAE,CAAC,gBAAgB,CAAC,IAAI,CAAC,GAAG,EAAE,EAAE,CAAC;KAC3D,CAAC,EACJ,CAAC,gBAAgB,EAAE,EAAE,CAAC,CACvB,CAAC;IAEF,MAAM,OAAO,GAAG,OAAO,CAAC,GAAG,EAAE;QAC3B,OAAO;YACL,OAAO,EAAE,CAAC,EAAO,EAAE,YAAqB,EAAE,EAAE;gBAC1C,IAAI,YAAY,EAAE;oBAChB,aAAa,CAAC,OAAO,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,OAAO,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;iBAC9D;qBAAM;oBACL,aAAa,CAAC,OAAO,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;iBAC/B;YACH,CAAC;YACD,SAAS,EAAE,CAAC,EAAO,EAAE,YAAqB,EAAE,EAAE;gBAC5C,IAAI,YAAY,EAAE;oBAChB,aAAa,CAAC,OAAO,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,SAAS,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;iBAChE;qBAAM;oBACL,aAAa,CAAC,SAAS,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;iBACjC;YACH,CAAC;YACD,SAAS,EAAE,CAAC,IAAa,EAAE,EAAE,CAAC,aAAa,CAAC,SAAS,CAAC,EAAE,EAAE,IAAI,CAAC;SAChE,CAAC;IACJ,CAAC,EAAE,CAAC,aAAa,EAAE,EAAE,CAAC,CAAC,CAAC;IAExB,OAAO;QACL,GAAG,SAAS;QACZ,EAAE;QACF,OAAO;QACP,aAAa,EAAE,CAAC,CAAC,OAAO;QACxB,OAAO;QACP,UAAU;KACX,CAAC;AACJ,CAAC","sourcesContent":["import {\n  wrapConnectorHooks,\n  ERROR_USE_NODE_OUTSIDE_OF_EDITOR_CONTEXT,\n} from '@craftjs/utils';\nimport { useMemo, useContext } from 'react';\nimport invariant from 'tiny-invariant';\n\nimport { NodeContext } from './NodeContext';\n\nimport { useInternalEditor } from '../editor/useInternalEditor';\nimport { Node } from '../interfaces';\n\nexport function useInternalNode<S = null>(collect?: (node: Node) => S) {\n  const context = useContext(NodeContext);\n  invariant(context, ERROR_USE_NODE_OUTSIDE_OF_EDITOR_CONTEXT);\n\n  const { id, related } = context;\n\n  const {\n    actions: EditorActions,\n    query,\n    connectors: editorConnectors,\n    ...collected\n  } = useInternalEditor(\n    (state) => id && state.nodes[id] && collect && collect(state.nodes[id])\n  );\n\n  const connectors = useMemo(\n    () =>\n      wrapConnectorHooks({\n        connect: (dom: HTMLElement) => editorConnectors.connect(dom, id),\n        drag: (dom: HTMLElement) => editorConnectors.drag(dom, id),\n      }),\n    [editorConnectors, id]\n  );\n\n  const actions = useMemo(() => {\n    return {\n      setProp: (cb: any, throttleRate?: number) => {\n        if (throttleRate) {\n          EditorActions.history.throttle(throttleRate).setProp(id, cb);\n        } else {\n          EditorActions.setProp(id, cb);\n        }\n      },\n      setCustom: (cb: any, throttleRate?: number) => {\n        if (throttleRate) {\n          EditorActions.history.throttle(throttleRate).setCustom(id, cb);\n        } else {\n          EditorActions.setCustom(id, cb);\n        }\n      },\n      setHidden: (bool: boolean) => EditorActions.setHidden(id, bool),\n    };\n  }, [EditorActions, id]);\n\n  return {\n    ...collected,\n    id,\n    related,\n    inNodeContext: !!context,\n    actions,\n    connectors,\n  };\n}\n"]}