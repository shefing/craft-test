{"version":3,"file":"NodeHelpers.js","sourceRoot":"","sources":["../../src/editor/NodeHelpers.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  deprecationWarning,\n  ERROR_CANNOT_DRAG,\n  ERROR_DUPLICATE_NODEID,\n  ERROR_INVALID_NODE_ID,\n  ERROR_MOVE_INCOMING_PARENT,\n  ERROR_MOVE_NONCANVAS_CHILD,\n  ERROR_MOVE_OUTGOING_PARENT,\n  ERROR_MOVE_TO_DESCENDANT,\n  ERROR_MOVE_TO_NONCANVAS_PARENT,\n  ERROR_MOVE_TOP_LEVEL_NODE,\n  ERROR_MOVE_CANNOT_DROP,\n  ROOT_NODE,\n} from '@craftjs/utils';\nimport invariant from 'tiny-invariant';\n\nimport { EditorState, NodeId, NodeSelector } from '../interfaces';\nimport { getNodesFromSelector } from '../utils/getNodesFromSelector';\nimport { serializeNode } from '../utils/serializeNode';\n\nexport function NodeHelpers(state: EditorState, id: NodeId) {\n  invariant(typeof id == 'string', ERROR_INVALID_NODE_ID);\n\n  const node = state.nodes[id];\n\n  const nodeHelpers = (id) => NodeHelpers(state, id);\n\n  return {\n    isCanvas() {\n      return !!node.data.isCanvas;\n    },\n    isRoot() {\n      return node.id === ROOT_NODE;\n    },\n    isLinkedNode() {\n      return (\n        node.data.parent &&\n        nodeHelpers(node.data.parent).linkedNodes().includes(node.id)\n      );\n    },\n    isTopLevelNode() {\n      return this.isRoot() || this.isLinkedNode();\n    },\n    isDeletable() {\n      return !this.isTopLevelNode();\n    },\n    isParentOfTopLevelNodes: () =>\n      node.data.linkedNodes && Object.keys(node.data.linkedNodes).length > 0,\n    isParentOfTopLevelCanvas() {\n      deprecationWarning('query.node(id).isParentOfTopLevelCanvas', {\n        suggest: 'query.node(id).isParentOfTopLevelNodes',\n      });\n      return this.isParentOfTopLevelNodes();\n    },\n    isSelected() {\n      return state.events.selected.has(id);\n    },\n    isHovered() {\n      return state.events.hovered.has(id);\n    },\n    isDragged() {\n      return state.events.dragged.has(id);\n    },\n    get() {\n      return node;\n    },\n    ancestors(deep = false): NodeId[] {\n      function appendParentNode(\n        id: NodeId,\n        ancestors: NodeId[] = [],\n        depth: number = 0\n      ) {\n        const node = state.nodes[id];\n        if (!node) {\n          return ancestors;\n        }\n\n        ancestors.push(id);\n\n        if (!node.data.parent) {\n          return ancestors;\n        }\n\n        if (deep || (!deep && depth === 0)) {\n          ancestors = appendParentNode(node.data.parent, ancestors, depth + 1);\n        }\n        return ancestors;\n      }\n      return appendParentNode(node.data.parent);\n    },\n    descendants(\n      deep = false,\n      includeOnly?: 'linkedNodes' | 'childNodes'\n    ): NodeId[] {\n      function appendChildNode(\n        id: NodeId,\n        descendants: NodeId[] = [],\n        depth: number = 0\n      ) {\n        if (deep || (!deep && depth === 0)) {\n          const node = state.nodes[id];\n\n          if (!node) {\n            return descendants;\n          }\n\n          if (includeOnly !== 'childNodes') {\n            // Include linkedNodes if any\n            const linkedNodes = nodeHelpers(id).linkedNodes();\n\n            linkedNodes.forEach((nodeId) => {\n              descendants.push(nodeId);\n              descendants = appendChildNode(nodeId, descendants, depth + 1);\n            });\n          }\n\n          if (includeOnly !== 'linkedNodes') {\n            const childNodes = nodeHelpers(id).childNodes();\n\n            childNodes.forEach((nodeId) => {\n              descendants.push(nodeId);\n              descendants = appendChildNode(nodeId, descendants, depth + 1);\n            });\n          }\n\n          return descendants;\n        }\n        return descendants;\n      }\n      return appendChildNode(id);\n    },\n    linkedNodes() {\n      return Object.values(node.data.linkedNodes || {});\n    },\n    childNodes() {\n      return node.data.nodes || [];\n    },\n    isDraggable(onError?: (err: string) => void) {\n      try {\n        const targetNode = node;\n        invariant(!this.isTopLevelNode(), ERROR_MOVE_TOP_LEVEL_NODE);\n        invariant(\n          NodeHelpers(state, targetNode.data.parent).isCanvas(),\n          ERROR_MOVE_NONCANVAS_CHILD\n        );\n        invariant(\n          targetNode.rules.canDrag(targetNode, nodeHelpers),\n          ERROR_CANNOT_DRAG\n        );\n        return true;\n      } catch (err) {\n        if (onError) {\n          onError(err);\n        }\n        return false;\n      }\n    },\n    isDroppable(selector: NodeSelector, onError?: (err: string) => void) {\n      const targets = getNodesFromSelector(state.nodes, selector);\n\n      const newParentNode = node;\n\n      try {\n        invariant(this.isCanvas(), ERROR_MOVE_TO_NONCANVAS_PARENT);\n        invariant(\n          newParentNode.rules.canMoveIn(\n            targets.map((selector) => selector.node),\n            newParentNode,\n            nodeHelpers\n          ),\n          ERROR_MOVE_INCOMING_PARENT\n        );\n\n        const parentNodes = {};\n\n        targets.forEach(({ node: targetNode, exists }) => {\n          invariant(\n            targetNode.rules.canDrop(newParentNode, targetNode, nodeHelpers),\n            ERROR_MOVE_CANNOT_DROP\n          );\n\n          // Ignore other checking if the Node is new\n          if (!exists) {\n            return;\n          }\n\n          invariant(\n            !nodeHelpers(targetNode.id).isTopLevelNode(),\n            ERROR_MOVE_TOP_LEVEL_NODE\n          );\n\n          const targetDeepNodes = nodeHelpers(targetNode.id).descendants(true);\n\n          invariant(\n            !targetDeepNodes.includes(newParentNode.id) &&\n              newParentNode.id !== targetNode.id,\n            ERROR_MOVE_TO_DESCENDANT\n          );\n\n          const currentParentNode =\n            targetNode.data.parent && state.nodes[targetNode.data.parent];\n\n          invariant(\n            currentParentNode.data.isCanvas,\n            ERROR_MOVE_NONCANVAS_CHILD\n          );\n\n          invariant(\n            currentParentNode ||\n              (!currentParentNode && !state.nodes[targetNode.id]),\n            ERROR_DUPLICATE_NODEID\n          );\n\n          if (currentParentNode.id !== newParentNode.id) {\n            if (!parentNodes[currentParentNode.id]) {\n              parentNodes[currentParentNode.id] = [];\n            }\n\n            parentNodes[currentParentNode.id].push(targetNode);\n          }\n        });\n\n        Object.keys(parentNodes).forEach((parentNodeId) => {\n          const childNodes = parentNodes[parentNodeId];\n          const parentNode = state.nodes[parentNodeId];\n\n          invariant(\n            parentNode.rules.canMoveOut(childNodes, parentNode, nodeHelpers),\n            ERROR_MOVE_OUTGOING_PARENT\n          );\n        });\n\n        return true;\n      } catch (err) {\n        if (onError) {\n          onError(err);\n        }\n        return false;\n      }\n    },\n    toSerializedNode() {\n      return serializeNode(node.data, state.options.resolver);\n    },\n    toNodeTree(includeOnly?: 'linkedNodes' | 'childNodes') {\n      const nodes = [id, ...this.descendants(true, includeOnly)].reduce(\n        (accum, descendantId) => {\n          accum[descendantId] = nodeHelpers(descendantId).get();\n          return accum;\n        },\n        {}\n      );\n\n      return {\n        rootNodeId: id,\n        nodes,\n      };\n    },\n\n    /**\n     Deprecated NodeHelpers\n     **/\n\n    decendants(deep = false) {\n      deprecationWarning('query.node(id).decendants', {\n        suggest: 'query.node(id).descendants',\n      });\n      return this.descendants(deep);\n    },\n    isTopLevelCanvas() {\n      return !this.isRoot() && !node.data.parent;\n    },\n  };\n}\n"]}