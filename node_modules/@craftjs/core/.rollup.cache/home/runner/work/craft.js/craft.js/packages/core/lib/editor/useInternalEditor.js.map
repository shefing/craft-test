{"version":3,"file":"useInternalEditor.js","sourceRoot":"","sources":["../../src/editor/useInternalEditor.ts"],"names":[],"mappings":"AAAA,OAAO,EACL,YAAY,EAGZ,kBAAkB,EAElB,0CAA0C,GAC3C,MAAM,gBAAgB,CAAC;AACxB,OAAO,EAAE,UAAU,EAAE,SAAS,EAAE,OAAO,EAAE,MAAM,OAAO,CAAC;AACvD,OAAO,SAAS,MAAM,gBAAgB,CAAC;AAEvC,OAAO,EAAE,aAAa,EAAE,MAAM,iBAAiB,CAAC;AAKhD,OAAO,EAAE,eAAe,EAAE,MAAM,wBAAwB,CAAC;AAiBzD,MAAM,UAAU,iBAAiB,CAC/B,SAA8B;IAE9B,MAAM,OAAO,GAAG,eAAe,EAAE,CAAC;IAClC,MAAM,KAAK,GAAG,UAAU,CAAC,aAAa,CAAC,CAAC;IACxC,SAAS,CAAC,KAAK,EAAE,0CAA0C,CAAC,CAAC;IAE7D,MAAM,SAAS,GAAG,YAAY,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC;IAEjD,MAAM,eAAe,GAAG,OAAO,CAC7B,GAAG,EAAE,CAAC,OAAO,IAAI,OAAO,CAAC,qBAAqB,EAAE,EAChD,CAAC,OAAO,CAAC,CACV,CAAC;IAEF,SAAS,CAAC,GAAG,EAAE;QACb,eAAe,CAAC,QAAQ,EAAE,CAAC;QAE3B,OAAO,GAAG,EAAE;YACV,eAAe,CAAC,OAAO,EAAE,CAAC;QAC5B,CAAC,CAAC;IACJ,CAAC,EAAE,CAAC,eAAe,CAAC,CAAC,CAAC;IAEtB,MAAM,UAAU,GAAG,OAAO,CACxB,GAAG,EAAE,CAAC,eAAe,IAAI,kBAAkB,CAAC,eAAe,CAAC,UAAU,CAAC,EACvE,CAAC,eAAe,CAAC,CAClB,CAAC;IAEF,OAAO;QACL,GAAG,SAAS;QACZ,UAAU;QACV,SAAS,EAAE,CAAC,CAAC,KAAK;QAClB,KAAK;KACN,CAAC;AACJ,CAAC","sourcesContent":["import {\n  useCollector,\n  useCollectorReturnType,\n  QueryCallbacksFor,\n  wrapConnectorHooks,\n  EventHandlerConnectors,\n  ERROR_USE_EDITOR_OUTSIDE_OF_EDITOR_CONTEXT,\n} from '@craftjs/utils';\nimport { useContext, useEffect, useMemo } from 'react';\nimport invariant from 'tiny-invariant';\n\nimport { EditorContext } from './EditorContext';\nimport { QueryMethods } from './query';\nimport { EditorStore } from './store';\n\nimport { CoreEventHandlers } from '../events/CoreEventHandlers';\nimport { useEventHandler } from '../events/EventContext';\nimport { EditorState } from '../interfaces';\n\nexport type EditorCollector<C> = (\n  state: EditorState,\n  query: QueryCallbacksFor<typeof QueryMethods>\n) => C;\n\nexport type useInternalEditorReturnType<C = null> = useCollectorReturnType<\n  EditorStore,\n  C\n> & {\n  inContext: boolean;\n  store: EditorStore;\n  connectors: EventHandlerConnectors<CoreEventHandlers, React.ReactElement>;\n};\n\nexport function useInternalEditor<C>(\n  collector?: EditorCollector<C>\n): useInternalEditorReturnType<C> {\n  const handler = useEventHandler();\n  const store = useContext(EditorContext);\n  invariant(store, ERROR_USE_EDITOR_OUTSIDE_OF_EDITOR_CONTEXT);\n\n  const collected = useCollector(store, collector);\n\n  const connectorsUsage = useMemo(\n    () => handler && handler.createConnectorsUsage(),\n    [handler]\n  );\n\n  useEffect(() => {\n    connectorsUsage.register();\n\n    return () => {\n      connectorsUsage.cleanup();\n    };\n  }, [connectorsUsage]);\n\n  const connectors = useMemo(\n    () => connectorsUsage && wrapConnectorHooks(connectorsUsage.connectors),\n    [connectorsUsage]\n  );\n\n  return {\n    ...collected,\n    connectors,\n    inContext: !!store,\n    store,\n  };\n}\n"]}